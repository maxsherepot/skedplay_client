type Girl {
    id: ID!
    first_name: String!
    last_name: String!
    gender: Int
    age: Int
    vip: Boolean
    created_at: DateTime!
    updated_at: DateTime!
    events: [Event] @belongsToMany
    prices: [Price] @belongsToMany
    services: [Service] @belongsToMany
}

input GirlFilters {
    services: [Int] @whereHas(key: "id", method: "whereIn")
    age: AgeRange @whereBetweenAge(key: "birthday")
    type: String @where
    vip: Boolean @where
}

extend type Query {
    girls(filters: GirlFilters @spread): [Girl!]! @paginate
    girl(id: ID @eq): Girl @find
}

extend type Mutation @middleware(checks: ["auth:api"]) {
    createGirlEvent(girl: ID!, input: EventInput @spread): Event
    @router(action: "Modules\\Api\\Http\\Controllers\\GirlController@createEvent")
}

