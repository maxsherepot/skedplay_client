input LoginInput {
    username: String!
    password: String!
}

input ForgotPasswordInput {
    phone: String!
}

input NewPasswordWithCodeInput {
    code: String!
    phone: String!
    password: String!
    password_confirmation: String!
}

input RefreshTokenInput {
    refresh_token: String
}

input RegisterInput {
    first_name: String!
    last_name: String!
    gender: String
    birtday: Date
    club_type: String
    phone: String!
    email: String!
    account_type: String!
    lat: String
    lng: String
    password: String!
    password_confirmation: String!
}

type RegisterPayload {
    access_token: String!
    user: User!
}

type AuthPayload {
    access_token: String!
    refresh_token: String!
    expires_in: Int!
    token_type: String!
    user: User!
}

input SendVerificationInput {
    phone: String!
}

input CheckVerificationInput {
    code: String!
    phone: String!
}

type SendVerificationResponse implements Status {
    expires_at: String
    status: Boolean!
    message: String
}

type CheckVerificationResponse implements Status {
    status: Boolean!
    message: String
}

type LogoutResponse implements Status {
    status: Boolean!
    message: String
}

type ForgotPasswordResponse implements Status {
    expires_at: String
    status: Boolean!
    message: String
}

type NewPasswordResponse implements Status {
    status: Boolean!
    message: String
}

type Mutation @namespace(field: "Modules\\Api\\GraphQL\\Mutations") {
    register(data: RegisterInput): RegisterPayload @field(resolver: "Auth\\Registration@resolve")
    login(data: LoginInput): AuthPayload! @field(resolver: "Auth\\Login@resolve")
    logout: LogoutResponse! @field(resolver: "Auth\\Logout@resolve")
    sendVerificationCode(data: SendVerificationInput): SendVerificationResponse! @field(resolver: "Verification\\SendVerification@resolve")
    checkVerificationCode(data: CheckVerificationInput): CheckVerificationResponse! @field(resolver: "Verification\\CheckVerification@resolve")
    forgotPassword(data: ForgotPasswordInput!): ForgotPasswordResponse! @field(resolver: "Auth\\ForgotPassword@resolve")
    updateForgottenPassword(data: NewPasswordWithCodeInput): NewPasswordResponse! @field(resolver: "Auth\\ResetPassword@resolve")
    refreshToken(data: RefreshTokenInput): AuthPayload! @field(resolver: "Auth\\RefreshToken@resolve")
}