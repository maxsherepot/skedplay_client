input LoginInput {
    username: String!
    password: String!
}

input ForgotPasswordInput {
    phone: String!
}

input NewPasswordWithCodeInput {
    code: String!
    phone: String!
    password: String!
    password_confirmation: String!
}

input RefreshTokenInput {
    refresh_token: String
}

input RegisterInput {
    account_type: String!
    first_name: String!
    last_name: String
    gender: Int
    birthday: Date
    club_type_id: Int
    phone: String!
    email: String!
    lat: String
    lng: String
    password: String!
    password_confirmation: String!
}

type RegisterPayload {
    access_token: String!
    user: User!
}

type AuthPayload {
    access_token: String!
    refresh_token: String!
    expires_in: Int!
    token_type: String!
    user: User!
}

type RefrestTokenPayload {
    access_token: String!
    refresh_token: String!
    expires_in: Int!
    token_type: String!
}

input SendVerificationInput {
    phone: String!
}

input CheckVerificationInput {
    code: String!
    phone: String!
}

type SendVerificationResponse implements Status {
    expires_at: String
    status: Boolean!
    message: String
}

type CheckVerificationResponse implements Status {
    status: Boolean!
    message: String
}

type LogoutResponse implements Status {
    status: Boolean!
    message: String
}

type ForgotPasswordResponse implements Status {
    expires_at: String
    status: Boolean!
    message: String
}

type NewPasswordResponse implements Status {
    status: Boolean!
    message: String
}

extend type Mutation {
    register(input: RegisterInput! @spread): RegisterPayload
    @router(action: "Modules\\Users\\Http\\Controllers\\Auth\\RegisterController@register")

    login(input: LoginInput! @spread): AuthPayload!
    @router(action: "Modules\\Users\\Http\\Controllers\\Auth\\AuthController@login")

    logout: LogoutResponse!
    @router(action: "Modules\\Users\\Http\\Controllers\\Auth\\AuthController@logout")

    forgotPassword(input: ForgotPasswordInput! @spread): ForgotPasswordResponse!
    @router(action: "Modules\\Users\\Http\\Controllers\\Auth\\AuthController@forgotPassword")

    resetPassword(input: NewPasswordWithCodeInput! @spread): NewPasswordResponse!
    @router(action: "Modules\\Users\\Http\\Controllers\\Auth\\AuthController@resetPassword")

    refreshToken(input: RefreshTokenInput! @spread): RefrestTokenPayload!
    @router(action: "Modules\\Users\\Http\\Controllers\\Auth\\AuthController@refreshToken")

    sendVerificationCode(input: SendVerificationInput! @spread): SendVerificationResponse!
    @router(action: "Modules\\Users\\Http\\Controllers\\Auth\\VerificationController@send")

    checkVerificationCode(input: CheckVerificationInput! @spread): CheckVerificationResponse!
    @router(action: "Modules\\Users\\Http\\Controllers\\Auth\\VerificationController@check")
}
